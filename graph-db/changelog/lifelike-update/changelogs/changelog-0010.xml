<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:pro="http://www.liquibase.org/xml/ns/pro"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.8.xsd">

  <changeSet id="set_displayName, date 03/10/2022" author="rcai">
    <comment>set biocyc node display name</comment>
    <sql>
    match(n:db_BioCyc) set n.displayName = n.name;
    match(n:db_Biocyc) where not exists(n.name) set n.displayName = n.biocyc_id;
    match(n:Regulation:db_BioCyc)-[:TYPE_OF]-(t:db_BioCyc) with n,
    case
        when n.mode='+' then t.eid + ' (+)'
        when n.mode='-' then t.eid + ' (-)'
        else t.eid
    end as displayName
    set n.displayName = displayName;
    match(n:Reaction:db_BioCyc) with n,
    case
        when exists (n.ec_number) then n.ec_number
        else n.eid
    end as displayName
    set n.displayName = displayName;
    match (n:TranscriptionUnit:db_BioCyc)-[:ELEMENT_OF]-(g:Gene) with n, collect(g.name) as genes
    with n,
    case
        when exists (n.name) then n.name + ' (tu)'
        else apoc.text.join(apoc.coll.sort(genes), '-') + ' (tu)'
    end as displayName
    set n.displayName = displayName;

    </sql>
  </changeSet>

  <changeSet id="set_node_description, date 03/10/2022" author="rcai">
    <comment>set node description</comment>
    <sql>
    match (n:Gene:db_BioCyc)-[:IS]-(g:Gene:db_NCBI) set n.description = g.full_name;
    match (n:Gene:db_BioCyc) where not exists(n.description) or n.description = '-'
    with n match (n)-[:ENCODES]-(p) set n.description = p.name;
    match (n:TranscriptionUnit:db_BioCyc)-[:ELEMENT_OF]-(g:Gene)
    with n, collect(g.description) as descs
    set n.description = 'TranscriptionUnit for ' + apoc.text.join(descs, ' and ');
    match (n:Promoter:db_BioCyc)-[:ELEMENT_OF]->(tu)-[:ELEMENT_OF]-(g:Gene)
    with n, collect(g.description) as details set n.description = 'Promoter for ' + apoc.text.join(details, ' and ');
    match (n:Protein:db_BioCyc)-[:ENCODES]-(g:Gene) where not exists(n.name) set n.name = g.description;
    match (p:db_BioCyc)-[:COMPONENT_OF]->(n:Protein) where not exists(n.name)
    with n, collect(p.name) as comps set n.name = 'complex of ' + apoc.text.join(comps, ', ');
    match (p:db_BioCyc)-[:COMPONENT_OF]->(n:Protein:db_BioCyc) with n, collect(p.displayName) as comps set n.description = 'complex of ' + apoc.text.join(comps, ' and ') ;
    match (n:Reaction:db_BioCyc) with n match (x)-[:CONSUMED_BY]-(n)-[:PRODUCES]-(y) with n, collect(distinct x.displayName) as c1, collect(distinct y.displayName) as c2,
    case when n.direction = 'REVERSIBLE' then ' &lt;=> '
    when n.direction contains 'RIGHT-TO-LEFT' then ' &lt;= '
    else ' => ' end as symbol
    set n.detail = apoc.text.join(c1, ' + ') + symbol + apoc.text.join(c2, ' + ');

    </sql>
  </changeSet>

  <changeSet id="set_reaction_name, date 03/10/2022" author="rcai">
    <comment>set up reaction node name as biocyc_id if there is no name property</comment>
    <sql>
    match(n:Reaction:db_BioCyc) where not exists(n.name) set n.name = n.biocyc_id;
    </sql>
  </changeSet>

  <changeSet id="set_gene_pathways, date 03/10/2022" author="rcai">
    <comment>set pathways related to a gene.</comment>
    <sql>
    match (n:db_BsubCyc:Gene) with n
    match path=(n)-[:ENCODES]-()-[:COMPONENT_OF*0..]->()-[]-(:EnzReaction)--(:Reaction)--(p:Pathway:db_BsubCyc)
    with n, collect(p.name) as pathways set n.pathways = pathways

    </sql>
  </changeSet>

  <changeSet id="set_entity_type, date 03/10/2022" author="rcai">
    <comment>set entity type for common entities since a node could have many labels</comment>
    <sql>
    match(n:Gene:db_BioCyc) set n.entityType='Gene';
    match(n:Compound) set n.entityType='Chemical';
    match(n:Protein:db_BioCyc) set n.entityType='Protein';
    match(n:Reaction) set n.entityType='Reaction';
    match(n:Pathway) set n.entityType='Pathway';
    match(n:RNA) set n.entityType='RNA';
    match(n:Promoter) set n.entityType='Promoter';
    match(n:TranscriptionUnit) set n.entityType='TranscriptionUnit';
    MATCH (n:Terminator) set n.entityType = 'Terminator';

    </sql>
  </changeSet>

  <changeSet id="set_gene_link, date 03/10/2022" author="rcai">
    <comment>link genes to NCBI gene</comment>
    <sql>

match(n:Gene:db_BsubCyc) where n.accession starts with 'BSU'
with n, replace(n.accession, 'BSU', 'BSU_') as locus_tag
match(g:Gene) where g.locus_tag=locus_tag merge (n)-[:IS]->(g);

match(n:Gene:db_BsubCyc) where not (n)-[:HAS_GENE]-() and size(n.accession)>0
with n match (g:Gene) where g.locus_tag = n.accession merge (n)-[:IS]->(g);

match(n:Gene:db_BsubCyc) where not (n)-[:HAS_GENE]-() and size(n.name)>0 with n
match (g:Gene) where g.name = n.name and g.tax_id='224308' merge (n)-[:IS]->(g);

    </sql>
  </changeSet>
</databaseChangeLog>
