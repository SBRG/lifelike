"""Add columns "upload_url" and "doi" to table "files"

Revision ID: 868c69bf2137
Revises: dbf6e232ca92
Create Date: 2020-06-08 12:43:37.390575

"""
from alembic import context
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '868c69bf2137'
down_revision = 'dbf6e232ca92'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('files', sa.Column('doi', sa.String(length=1024), nullable=True))
    op.add_column('files', sa.Column('upload_url', sa.String(length=2048), nullable=True))
    # ### end Alembic commands ###
    if context.get_x_argument(as_dictionary=True).get('data_migrate', None):
        data_upgrades()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('files', 'upload_url')
    op.drop_column('files', 'doi')
    # ### end Alembic commands ###
    # NOTE: In practice perfect downgrades are difficult and in some cases
    # impossible! It is more practical to use database backups/snapshots to
    # "downgrade" the database. Changes to the database that we intend to
    # push to production should always be added to a NEW migration.
    # (i.e. "downgrade forward"!)


def data_upgrades():
    """Add optional data upgrade migrations here"""
    pass


def data_downgrades():
    """Add optional data downgrade migrations here"""
    pass
