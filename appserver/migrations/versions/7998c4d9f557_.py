"""Update files model to include custom_annotations.
We will use this field to preserve annotations added
by users until they are revised and added to the pipeline

Revision ID: 7998c4d9f557
Revises: a36d95c0cf4c
Create Date: 2020-04-28 08:24:05.246430

"""
from alembic import context
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7998c4d9f557'
down_revision = 'a36d95c0cf4c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'files',
        sa.Column('custom_annotations',
                  postgresql.JSONB(astext_type=sa.Text()),
                  server_default='[]',
                  nullable=False)
    )
    # ### end Alembic commands ###
    if context.get_x_argument(as_dictionary=True).get('data_migrate', None):
        data_upgrades()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('files', 'custom_annotations')
    # ### end Alembic commands ###
    # NOTE: In practice perfect downgrades are difficult and in some cases
    # impossible! It is more practical to use database backups/snapshots to
    # "downgrade" the database. Changes to the database that we intend to
    # push to production should always be added to a NEW migration.
    # (i.e. "downgrade forward"!)


def data_upgrades():
    """Add optional data upgrade migrations here"""
    pass


def data_downgrades():
    """Add optional data downgrade migrations here"""
    pass
