name: 'Docker build and publish'
description: 'Builds and publishes a Docker image into a Docker registry.'

inputs:
  registry:
    description: 'Server address of the Docker registry'
    default: lifelike.azurecr.io
    required: false
  image:
    description: 'Docker image'
    required: true
  username:
    description: 'Username to log in to a Docker registry'
    default: ${{ secrets.AZURE_CR_USERNAME }}
    required: false
  password:
    description: 'Password or PAT to log in to a Docker registry'
    default: ${{ secrets.AZURE_CR_PASSWORD }}
    required: false
  dockerfile:
    description: 'Dockerfile to use for building the image'
    required: false
    default: './Dockerfile'
  context:
    description: 'Docker build context'
    required: false
    default: '.'
  push:
    description: 'Whether to push the image to the registry'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{ inputs.image }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request' && inputs.username != '' && inputs.password != ''
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: ${{ inputs.dockerfile }}
        context: ${{ inputs.context }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        push: ${{ inputs.push }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
